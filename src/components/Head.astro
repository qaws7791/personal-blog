---
import "../styles/theme.css";
import { ClientRouter } from "astro:transitions";

import "@fontsource-variable/noto-sans-kr";

interface Props {
  title: string;
  description: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = "/blog-placeholder-1.jpg" } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
<link rel="manifest" href="/site.webmanifest" />
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<!-- PageFind -->
<link href="/pagefind/pagefind-ui.css" rel="stylesheet" />
<script is:inline src="/pagefind/pagefind-ui.js"></script>

<ClientRouter />

<script is:inline>
  function init() {
    const theme = window.matchMedia("(prefers-color-scheme: dark)");
    const html = document.documentElement;
    theme.onchange = function (e) {
      html.setAttribute("data-theme", e.matches ? "dark" : "light");
    };
    html.setAttribute("data-theme", theme.matches ? "dark" : "light");
  }
  function animate() {
    const elements = document.querySelectorAll(".animate");
    elements.forEach((element) => {
      setTimeout(() => {
        element.classList.add("show");
      }, 100);
    });
  }
  init();
  document.addEventListener("DOMContentLoaded", animate);
  document.addEventListener("astro:after-swap", init);
</script>
